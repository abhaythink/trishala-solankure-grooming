{"ast":null,"code":"var _jsxFileName = \"/home/ttpl-lnve15-0130/Repoclone/trishala-solankure-grooming/React Day 5/Practise_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/Store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // used to avoid infinite loop we used useEffect() hook\n  // useEffect(() => {\n  //   const stroredUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n  //   if (stroredUserLoggedInInformation === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem(\"isLoggedIn\", \"1\");\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn');\n  //   setIsLoggedIn(false);\n  // };\n\n  const ctx = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","useState","Login","Home","MainHeader","AuthContext","jsxDEV","_jsxDEV","App","_s","ctx","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","isLoggedIn","_c","$RefreshReg$"],"sources":["/home/ttpl-lnve15-0130/Repoclone/trishala-solankure-grooming/React Day 5/Practise_project/src/App.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./components/Store/auth-context\";\nfunction App() {\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // used to avoid infinite loop we used useEffect() hook\n  // useEffect(() => {\n  //   const stroredUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n  //   if (stroredUserLoggedInInformation === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, []);\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem(\"isLoggedIn\", \"1\");\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   localStorage.removeItem('isLoggedIn');\n  //   setIsLoggedIn(false);\n  // };\n\n\n  const ctx = useContext(AuthContext)\n  return (\n  <React.Fragment>\n\n      <MainHeader   />\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n  </React.Fragment>\n      \n   \n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA,MAAMC,GAAG,GAAGV,UAAU,CAACK,WAAW,CAAC;EACnC,oBACAE,OAAA,CAACR,KAAK,CAACY,QAAQ;IAAAC,QAAA,gBAEXL,OAAA,CAACH,UAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBT,OAAA;MAAAK,QAAA,GACG,CAACF,GAAG,CAACO,UAAU,iBAAIV,OAAA,CAACL,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5BN,GAAG,CAACO,UAAU,iBAAIV,OAAA,CAACJ,IAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAInB;AAACP,EAAA,CArCQD,GAAG;AAAAU,EAAA,GAAHV,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}